/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/chat/{chat_id}/message/": {
    /** Get Messages */
    get: operations["get_messages_api_chat__chat_id__message__get"];
    /** Create Message */
    post: operations["create_message_api_chat__chat_id__message__post"];
  };
  "/api/chat/": {
    /** Get All Chats */
    get: operations["get_all_chats_api_chat__get"];
    /** Create Chat */
    post: operations["create_chat_api_chat__post"];
  };
  "/api/chat/{chat_id}": {
    /** Get Chat */
    get: operations["get_chat_api_chat__chat_id__get"];
    /** Update Chat */
    patch: operations["update_chat_api_chat__chat_id__patch"];
  };
  "/api/inference/sql": {
    /** Generate Sql */
    post: operations["generate_sql_api_inference_sql_post"];
  };
  "/api/datasource/": {
    /** Get All Datasource */
    get: operations["get_all_datasource_api_datasource__get"];
    /** Create Datasource */
    post: operations["create_datasource_api_datasource__post"];
  };
  "/api/datasource/{datasource_id}": {
    /** Get Datasource By Id */
    get: operations["get_datasource_by_id_api_datasource__datasource_id__get"];
    /** Delete Datasource */
    delete: operations["delete_datasource_api_datasource__datasource_id__delete"];
  };
  "/api/dashboard/": {
    /** Root */
    get: operations["root_api_dashboard__get"];
  };
  "/api/snippet/": {
    /** Root */
    get: operations["root_api_snippet__get"];
  };
  "/": {
    /** Get Version */
    get: operations["get_version__get"];
  };
  "/health": {
    /** Health Check */
    get: operations["health_check_health_get"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /**
     * Agent
     * @enum {string}
     */
    Agent: "CHATBOT" | "USER";
    /**
     * Chat
     * @description Represents a Chat record
     */
    Chat: {
      /** Id */
      id: string;
      /** Name */
      name?: string | null;
      /** Userid */
      userId: string;
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /**
       * Updatedat
       * Format: date-time
       */
      updatedAt: string;
      User?: components["schemas"]["User"] | null;
      /** Message */
      Message?: components["schemas"]["Message"][] | null;
    };
    /** CreateChatDTO */
    CreateChatDTO: {
      /** Message */
      message: string;
      /**
       * Agent
       * @default USER
       */
      agent?: "USER" | "CHATBOT";
    };
    /** CreateDatasourceDTO */
    CreateDatasourceDTO: {
      /** Name */
      name: string;
      /** Engine */
      engine: string;
      /** Url */
      url?: string | null;
    };
    /** CreateMessageDTO */
    CreateMessageDTO: {
      /** Content */
      content: string;
      /** Agent */
      agent: "USER" | "CHATBOT";
    };
    /**
     * Datasource
     * @description Represents a Datasource record
     */
    Datasource: {
      /** Id */
      id: string;
      /** Name */
      name: string;
      /** Engine */
      engine: string;
      /** Userid */
      userId: string;
      /** Url */
      url: string;
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /**
       * Updatedat
       * Format: date-time
       */
      updatedAt: string;
      User?: components["schemas"]["User"] | null;
    };
    /** GenerateSQLDTO */
    GenerateSQLDTO: {
      /** Prompt */
      prompt: string;
      /** Dburl */
      dbUrl: string;
      /**
       * Generationtype
       * @default DIN-SQL
       */
      generationType?: string;
      /**
       * Model
       * @default GPT-4
       */
      model?: string;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /**
     * Message
     * @description Represents a Message record
     */
    Message: {
      /** Id */
      id: string;
      /** Content */
      content: string;
      agent: components["schemas"]["Agent"];
      /** Chatid */
      chatId: string;
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /**
       * Updatedat
       * Format: date-time
       */
      updatedAt: string;
      chat?: components["schemas"]["Chat"] | null;
    };
    /** UpdateChatDTO */
    UpdateChatDTO: {
      /** Name */
      name?: string | null;
    };
    /**
     * User
     * @description Represents a User record
     */
    User: {
      /** Id */
      id: string;
      /** Uid */
      uid: string;
      /** Name */
      name: string;
      /** Username */
      username?: string | null;
      /** Email */
      email: string;
      /** Image */
      image?: string | null;
      /** Provider */
      provider?: string | null;
      /** Datasource */
      Datasource?: components["schemas"]["Datasource"][] | null;
      /** Chat */
      Chat?: components["schemas"]["Chat"][] | null;
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /**
       * Updatedat
       * Format: date-time
       */
      updatedAt: string;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Get Messages */
  get_messages_api_chat__chat_id__message__get: {
    parameters: {
      path: {
        chat_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Message"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Message */
  create_message_api_chat__chat_id__message__post: {
    parameters: {
      path: {
        chat_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateMessageDTO"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Message"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get All Chats */
  get_all_chats_api_chat__get: {
    parameters: {
      query?: {
        n?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Chat"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Chat */
  create_chat_api_chat__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateChatDTO"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Chat"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Chat */
  get_chat_api_chat__chat_id__get: {
    parameters: {
      path: {
        chat_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Chat"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Chat */
  update_chat_api_chat__chat_id__patch: {
    parameters: {
      path: {
        chat_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateChatDTO"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Chat"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Generate Sql */
  generate_sql_api_inference_sql_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenerateSQLDTO"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get All Datasource */
  get_all_datasource_api_datasource__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /** Create Datasource */
  create_datasource_api_datasource__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateDatasourceDTO"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Datasource By Id */
  get_datasource_by_id_api_datasource__datasource_id__get: {
    parameters: {
      path: {
        datasource_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Datasource */
  delete_datasource_api_datasource__datasource_id__delete: {
    parameters: {
      path: {
        datasource_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Root */
  root_api_dashboard__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /** Root */
  root_api_snippet__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /** Get Version */
  get_version__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /** Health Check */
  health_check_health_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
}
